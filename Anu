// Anime.kt
data class Anime(
    val malId: Int,
    val title: String,
    val imageUrl: String,
    val synopsis: String,
    val type: String,
    val episodes: Int
)

// AnimeService.kt
interface AnimeService {
    @GET("top/anime")
    suspend fun getTopAnime(@Query("page") page: Int): Response<AnimeResponse>
}

// AnimeResponse.kt
data class AnimeResponse(
    @SerializedName("top") val topAnime: List<Anime>
)

// AnimeAdapter.kt
class AnimeAdapter(private val animeList: List<Anime>) : RecyclerView.Adapter<AnimeAdapter.ViewHolder>() {
    
    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val titleTextView: TextView = itemView.findViewById(R.id.titleTextView)
        val imageView: ImageView = itemView.findViewById(R.id.imageView)
        val synopsisTextView: TextView = itemView.findViewById(R.id.synopsisTextView)
    }
    
    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_anime, parent, false)
        return ViewHolder(view)
    }

    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        val anime = animeList[position]
        holder.titleTextView.text = anime.title
        holder.synopsisTextView.text = anime.synopsis

        Glide.with(holder.imageView.context)
            .load(anime.imageUrl)
            .into(holder.imageView)

        holder.itemView.setOnClickListener {
            // Handle item click
        }
    }

    override fun getItemCount(): Int {
        return animeList.size
    }
}

// MainActivity.kt
class MainActivity : AppCompatActivity() {

    private lateinit var recyclerView: RecyclerView
    private lateinit var adapter: AnimeAdapter

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        recyclerView = findViewById(R.id.recyclerView)
        recyclerView.layoutManager = LinearLayoutManager(this)

        adapter = AnimeAdapter(emptyList())
        recyclerView.adapter = adapter

        val retrofit = Retrofit.Builder()
            .baseUrl("https://api.jikan.moe/v3/")
            .addConverterFactory(GsonConverterFactory.create())
            .build()

        val service = retrofit.create(AnimeService::class.java)
        GlobalScope.launch(Dispatchers.IO) {
            val response = service.getTopAnime(1)
            if (response.isSuccessful) {
                val animeList = response.body()?.topAnime ?: emptyList()
                withContext(Dispatchers.Main) {
                    adapter = AnimeAdapter(animeList)
                    recyclerView.adapter = adapter
                }
            }
        }
    }
}
